/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "tolerance"
solvers
{
    p
    {
        solver          GAMG;
        tolerance       1e-9;
        relTol          1e-1;
        minIter         3;              // a minimum number of iterations
        maxIter         10;            // limitation of iterions number
        smoother        FDIC;            // setting for GAMG
        nPreSweeps      1;              // 1 for pd, set to 0 for all other!
        nPostSweeps     2;              // 2 is fine
        nFinestSweeps   2;              // 2 is fine
        scaleCorrection true;           // true is fine
        directSolveCoarsestLevel false; // false is fine
        cacheAgglomeration on;          // on is fine; set to off, if dynamic
                                        // mesh refinement is used!
        nCellsInCoarsestLevel 500;      // 500 is fine,
                                        // otherwise sqrt(number of cells)
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

    U
    {
        type            coupled;  // optional, defaults to segregated 
        solver          PBiCCCG; 
        preconditioner  DILU; 
        tolerance       (1e-9 1e-9 1e-9); 
        relTol          (1e-2 1e-2 1e-2); 
//        solver          smoothSolver;
//        smoother        symGaussSeidel;
//        nSweeps         2;
//        tolerance       1e-9;
//        relTol          1e-3;
    }

}

SIMPLE
{
    nNonOrthogonalCorrectors 0;

    residualControl
    {
        p               $tol;
        U               $tol;
    }
}

potentialFlow
{
    pRefCell                 1;
    pRefValue                0;
    nNonOrthogonalCorrectors 10;
}


relaxationFactors
{
    fields
    {
        p               0.3;
    }
    equations
    {
        U               0.7;
    }
}


// ************************************************************************* //
